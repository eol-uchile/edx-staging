name: Docker Image CI

on:
  merge_group:
  push:
    branches:
      - eol-release/**
      - openuchile-release/**
    paths:
      - 'Dockerfile'
      - 'requirements/*.txt'
      - 'themes/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - eol-release/**
      - openuchile-release/**

jobs:
  variables:
    uses: eol-uchile/edx-platform/.github/workflows/variables.yml@eol/koa.master # TODO: points to eol-release trunk
  build:
    needs: [ variables ]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      TS: ${{ needs.variables.outputs.timestamp }}
      RELEASE-NAME: ${{ needs.variables.outputs.release-name }}
      PROJECT: ${{ needs.variables.outputs.project }}
      CODE: ${{ needs.variables.outputs.code }}

    steps:
      - uses: actions/checkout@v4

      - name: Pull submodules
        run: git submodule update --init --recursive

      - name: Build Open edX
        run: docker build . --file ./Dockerfile --tag ghcr.io/eol-uchile/edx-staging:${{ env.CODE }}-${{ env.RELEASE-NAME }} --tag ghcr.io/eol-uchile/edx-staging:${{ env.CODE }}-${{ env.RELEASE-NAME }}-${{ env.TS }} --target base

      - name: Build Static files for OpenedX S3
        run: docker build . --file ./Dockerfile --tag ghcr.io/eol-uchile/edx-staging:s3-static-${{ env.CODE }}-${{ env.RELEASE-NAME }} --tag ghcr.io/eol-uchile/edx-staging:s3-static-${{ env.CODE }}-${{ env.RELEASE-NAME }}-${{ env.TS }} --target s3

      - name: Login to GitHub Container Registry
        if: github.ref == format('refs/heads/{0}-release/{1}', ${{ env.PROJECT }}, ${{ env.RELEASE-NAME }})
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push
        if: github.ref == format('refs/heads/{0}-release/{1}', ${{ env.PROJECT }}, ${{ env.RELEASE-NAME }})
        run: |
          docker push ghcr.io/eol-uchile/edx-staging:${{ env.CODE }}-${{ env.RELEASE-NAME }}
          docker push ghcr.io/eol-uchile/edx-staging:${{ env.CODE }}-${{ env.RELEASE-NAME }}-${{ env.TS }}
          docker push ghcr.io/eol-uchile/edx-staging:s3-static-${{ env.CODE }}-${{ env.RELEASE-NAME }}
          docker push ghcr.io/eol-uchile/edx-staging:s3-static-${{ env.CODE }}-${{ env.RELEASE-NAME }}-${{ env.TS }}

  webhook:
    needs: [ variables, build ]
    uses: ./.github/workflows/webhook.yml
    with:
      code: ${{ needs.variables.outputs.code }}
    secrets: inherit

  MQ-ok:
    name: Merge-Queue-OK
    needs: [variables, build, webhook]
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
      - name: CI succeeded
        run: exit 0
